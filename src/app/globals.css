/* Global theme variables and basic resets for Tether
   Light theme: bright orange accent
   Dark theme: fire red accent with black/white neutrals

   This file avoids Tailwind `@apply` at-rules so it works even if PostCSS
   processing differs between environments. Component-level utility
   classes (Tailwind) can still be used in JSX.
*/

@import "tailwindcss";

/* Tailwind utilities like bg-background/text-foreground resolve to
  CSS variables named --color-*. Define them here to point to our
  base theme variables so components render correctly. */

:root {
  /* Radii */
  --radius-sm: 0.25rem;
  --radius-md: 0.375rem;
  --radius-lg: 0.5rem;

  /* Light mode defaults (system default fallback) */
  --background: #ffffff;            /* page background */
  --foreground: #0b0b0b;            /* primary text (near-black) */
  --muted: #f3f4f6;                 /* muted surfaces */
  --muted-foreground: #6b7280;      /* muted text */
  --border: #e5e7eb;                /* borders */

  /* Primary / accent for light theme: bright orange */
  --primary: #ff7a00;               /* bright orange */
  --primary-foreground: #ffffff;

  /* Opposite button (inverse of theme) - used by .btn-opposite */
  --opposite-button-bg: var(--foreground);
  --opposite-button-text: var(--background);

  /* Misc */
  --card: #ffffff;
  --card-foreground: var(--foreground);
  --ring: rgba(0,0,0,0.12);

  /* Tailwind token variables expected by utilities (bg-background, etc.) */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-border: var(--border);
  --color-ring: var(--ring);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--card);
  --color-popover-foreground: var(--card-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-accent: var(--muted);
  --color-accent-foreground: var(--foreground);
  --color-secondary: var(--muted);
  --color-secondary-foreground: var(--foreground);
}

/* Dark theme variables: fire red accent, black/white neutrals */
.dark {
  --background: #070707;            /* nearly-black */
  --foreground: #ffffff;            /* white text */
  --muted: #0f0f0f;                 /* muted surfaces */
  --muted-foreground: #9ca3af;      /* subdued text */
  --border: rgba(255,255,255,0.06); /* subtle light border */

  /* Fire red primary accent (bright on dark) */
  --primary: #ff2d2d;               /* fire red */
  --primary-foreground: #ffffff;

  --opposite-button-bg: var(--foreground);
  --opposite-button-text: var(--background);

  --card: #0b0b0b;
  --card-foreground: var(--foreground);
  --ring: rgba(255,255,255,0.08);

  /* Keep Tailwind token variables consistent in dark mode */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-border: var(--border);
  --color-ring: var(--ring);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--card);
  --color-popover-foreground: var(--card-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-accent: var(--muted);
  --color-accent-foreground: var(--foreground);
  --color-secondary: var(--muted);
  --color-secondary-foreground: var(--foreground);
}

/* Respect user's system preference as a fallback (if JS/theme toggle not run) */
@media (prefers-color-scheme: dark) {
  :root:not(.light) {
    /* only change when `.dark` is not explicitly set; this gives a sensible
       system default while ThemeToggle (JS) can still override by toggling
       the `.dark` class on <html>. */
    --background: #070707;
    --foreground: #ffffff;
    --muted: #0f0f0f;
    --muted-foreground: #9ca3af;
    --border: rgba(255,255,255,0.06);
    --primary: #ff2d2d;
    --primary-foreground: #ffffff;
    --card: #0b0b0b;
    --card-foreground: var(--foreground);
  }
}

/* Base element styles */
*,
*::before,
*::after {
  box-sizing: border-box;
}

html, body {
  height: 100%;
}

body {
  margin: 0;
  background-color: var(--background);
  color: var(--foreground);
  font-family: ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Links and primary CTAs */
a {
  color: inherit;
}

.btn-opposite {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  border-radius: var(--radius-md);
  padding: 0.375rem 0.75rem;
  font-size: 0.875rem;
  font-weight: 500;
  background-color: var(--opposite-button-bg);
  color: var(--opposite-button-text);
  border: 1px solid transparent;
  text-decoration: none;
}

.btn-opposite:hover {
  filter: brightness(0.95);
}

.btn-primary {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  border-radius: var(--radius-md);
  padding: 0.5rem 1rem;
  font-weight: 600;
  background-color: var(--primary);
  color: var(--primary-foreground);
  border: 1px solid transparent;
}

/* Cards and borders */
.card {
  background-color: var(--card);
  color: var(--card-foreground);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  padding: 1rem;
}

/* Utility: muted text */
.muted {
  color: var(--muted-foreground);
}

/* Provide a small focus ring utility (used by JS-based theme toggle) */
.focus-ring:focus {
  outline: 2px solid transparent;
  box-shadow: 0 0 0 4px var(--ring);
}

/* Container widths used by layouts */
.container {
  max-width: 72rem; /* 1152px */
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* small helpers to keep consistent spacing in pages */
.page-hero { padding: 3rem 0; }

/* end of globals.css */
